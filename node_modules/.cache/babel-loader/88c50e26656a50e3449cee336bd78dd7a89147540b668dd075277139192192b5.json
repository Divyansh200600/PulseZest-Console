{"ast":null,"code":"var _jsxFileName = \"E:\\\\PulseZest\\\\Console\\\\PulseZest-Console\\\\src\\\\components\\\\db.jsx\";\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport EmployeeDashboard from './DEmployeeDashboard';\nimport InternDashboard from './InternDashboard';\nimport AppDevDashboard from './AppDevDashboard';\nimport WebDevDashboard from './WebDevDashboard';\nimport Login from './Login'; // Assuming you have a Login component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Db = () => {\n  // Mock authentication check (replace with actual logic)\n  const isAuthenticated = true; // Replace with your authentication logic\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '800px',\n        margin: '0 auto',\n        padding: '20px',\n        backgroundColor: '#fff',\n        boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\n        borderRadius: '8px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/employee\",\n          element: /*#__PURE__*/_jsxDEV(EmployeeDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/intern\",\n          element: /*#__PURE__*/_jsxDEV(InternDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/app-dev\",\n          element: /*#__PURE__*/_jsxDEV(AppDevDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/web-dev\",\n          element: /*#__PURE__*/_jsxDEV(WebDevDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = Db;\nexport default Db;\nvar _c;\n$RefreshReg$(_c, \"Db\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","EmployeeDashboard","InternDashboard","AppDevDashboard","WebDevDashboard","Login","jsxDEV","_jsxDEV","Db","isAuthenticated","to","fileName","_jsxFileName","lineNumber","columnNumber","children","style","maxWidth","margin","padding","backgroundColor","boxShadow","borderRadius","path","element","_c","$RefreshReg$"],"sources":["E:/PulseZest/Console/PulseZest-Console/src/components/db.jsx"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport EmployeeDashboard from './DEmployeeDashboard';\r\nimport InternDashboard from './InternDashboard';\r\nimport AppDevDashboard from './AppDevDashboard';\r\nimport WebDevDashboard from './WebDevDashboard';\r\nimport Login from './Login'; // Assuming you have a Login component\r\n\r\nconst Db = () => {\r\n  // Mock authentication check (replace with actual logic)\r\n  const isAuthenticated = true; // Replace with your authentication logic\r\n\r\n  // Redirect to login if not authenticated\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div style={{ maxWidth: '800px', margin: '0 auto', padding: '20px', backgroundColor: '#fff', boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)', borderRadius: '8px' }}>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Navigate to=\"/employee\" />} />\r\n          <Route path=\"/employee\" element={<EmployeeDashboard />} />\r\n          <Route path=\"/intern\" element={<InternDashboard />} />\r\n          <Route path=\"/app-dev\" element={<AppDevDashboard />} />\r\n          <Route path=\"/web-dev\" element={<WebDevDashboard />} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Db;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}