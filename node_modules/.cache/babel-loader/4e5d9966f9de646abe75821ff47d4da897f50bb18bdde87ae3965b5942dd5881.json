{"ast":null,"code":"var _jsxFileName = \"E:\\\\PulseZest\\\\Console\\\\PulseZest-Console\\\\src\\\\utils\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from './firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(Route);\nexport const ProtectedRoute = ({\n  element: Component,\n  ...rest\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setIsAuthenticated(!!user);\n    });\n    return () => unsubscribe();\n  }, []);\n  if (isAuthenticated === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this); // Or some loading indicator\n  }\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, {\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 54\n  }, this);\n};\n_s(ProtectedRoute, \"ZTMIcZ3KFUL4S6fmpEYhW5p5Z1I=\");\n_c = ProtectedRoute;\nexport const PublicRoute = ({\n  element: Component,\n  ...rest\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setIsAuthenticated(!!user);\n    });\n    return () => unsubscribe();\n  }, []);\n  if (isAuthenticated === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this); // Or some loading indicator\n  }\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/db\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(Component, {\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 52\n  }, this);\n};\n_s2(PublicRoute, \"ZTMIcZ3KFUL4S6fmpEYhW5p5Z1I=\");\n_c2 = PublicRoute;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"PublicRoute\");","map":{"version":3,"names":["React","useEffect","useState","Route","Navigate","onAuthStateChanged","auth","jsxDEV","_jsxDEV","console","log","ProtectedRoute","element","Component","rest","_s","isAuthenticated","setIsAuthenticated","unsubscribe","user","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","PublicRoute","_s2","_c2","$RefreshReg$"],"sources":["E:/PulseZest/Console/PulseZest-Console/src/utils/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Route, Navigate } from 'react-router-dom';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { auth } from './firebaseConfig';\r\nconsole.log(Route);\r\nexport const ProtectedRoute = ({ element: Component, ...rest }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      setIsAuthenticated(!!user);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  if (isAuthenticated === null) {\r\n    return <div>Loading...</div>; // Or some loading indicator\r\n  }\r\n\r\n  return isAuthenticated ? <Component {...rest} /> : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport const PublicRoute = ({ element: Component, ...rest }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      setIsAuthenticated(!!user);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  if (isAuthenticated === null) {\r\n    return <div>Loading...</div>; // Or some loading indicator\r\n  }\r\n\r\n  return isAuthenticated ? <Navigate to=\"/db\" /> : <Component {...rest} />;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxCC,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;AAClB,OAAO,MAAMQ,cAAc,GAAGA,CAAC;EAAEC,OAAO,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACd,MAAMiB,WAAW,GAAGb,kBAAkB,CAACC,IAAI,EAAGa,IAAI,IAAK;MACrDF,kBAAkB,CAAC,CAAC,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC;IAEF,OAAO,MAAMD,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,eAAe,KAAK,IAAI,EAAE;IAC5B,oBAAOR,OAAA;MAAAY,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;EAEA,OAAOR,eAAe,gBAAGR,OAAA,CAACK,SAAS;IAAA,GAAKC;EAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,gBAAGhB,OAAA,CAACJ,QAAQ;IAACqB,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7E,CAAC;AAACT,EAAA,CAhBWJ,cAAc;AAAAe,EAAA,GAAdf,cAAc;AAkB3B,OAAO,MAAMgB,WAAW,GAAGA,CAAC;EAAEf,OAAO,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAc,GAAA;EAC9D,MAAM,CAACZ,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACd,MAAMiB,WAAW,GAAGb,kBAAkB,CAACC,IAAI,EAAGa,IAAI,IAAK;MACrDF,kBAAkB,CAAC,CAAC,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC;IAEF,OAAO,MAAMD,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,eAAe,KAAK,IAAI,EAAE;IAC5B,oBAAOR,OAAA;MAAAY,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;EAEA,OAAOR,eAAe,gBAAGR,OAAA,CAACJ,QAAQ;IAACqB,EAAE,EAAC;EAAK;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGhB,OAAA,CAACK,SAAS;IAAA,GAAKC;EAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAC1E,CAAC;AAACI,GAAA,CAhBWD,WAAW;AAAAE,GAAA,GAAXF,WAAW;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}