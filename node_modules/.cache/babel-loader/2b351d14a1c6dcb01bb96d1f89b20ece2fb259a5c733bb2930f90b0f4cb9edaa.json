{"ast":null,"code":"var _jsxFileName = \"E:\\\\PulseZest\\\\Console\\\\PulseZest-Console\\\\src\\\\components\\\\particles.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport { loadSlim } from \"@tsparticles/slim\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticlesComponent = props => {\n  _s();\n  const [init, setInit] = useState(false);\n  console.log(init);\n  useEffect(() => {\n    initParticlesEngine(async engine => {\n      await loadSlim(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n  const particlesLoaded = container => {\n    console.log(container);\n  };\n  const options = useMemo(() => ({\n    background: {\n      color: {\n        value: \"#0f0c29\" // Change background color to a gradient\n      }\n    },\n    fpsLimit: 60,\n    interactivity: {\n      events: {\n        onClick: {\n          enable: true,\n          mode: \"push\"\n        },\n        onHover: {\n          enable: true,\n          mode: \"repulse\"\n        }\n      },\n      modes: {\n        repulse: {\n          distance: 100 // Increase repulse distance\n        },\n        push: {\n          quantity: 4 // Increase the number of particles pushed on click\n        }\n      }\n    },\n    particles: {\n      color: {\n        value: [\"#ffffff\", \"#ff73a1\", \"#ffd700\"] // Change particle colors to an array of multiple colors\n      },\n      links: {\n        color: \"#ffffff\",\n        distance: 150,\n        enable: true,\n        opacity: 0.3,\n        width: 1\n      },\n      move: {\n        direction: \"random\",\n        enable: true,\n        outModes: {\n          default: \"out\" // Change out mode to \"out\" to make particles disappear smoothly\n        },\n        random: true,\n        speed: 1,\n        straight: false\n      },\n      number: {\n        density: {\n          enable: true,\n          value_area: 800 // Increase the density value area\n        },\n        value: 100\n      },\n      opacity: {\n        value: 0.8 // Reduce overall opacity slightly\n      },\n      shape: {\n        type: \"circle\"\n      },\n      size: {\n        value: {\n          min: 1,\n          max: 3\n        }\n      }\n    },\n    detectRetina: true\n  }), []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: props.id,\n    init: particlesLoaded,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, this);\n};\n_s(ParticlesComponent, \"eB+NWpxmGZSqHQDaTSx/Qv0E/5M=\");\n_c = ParticlesComponent;\nexport default ParticlesComponent;\nvar _c;\n$RefreshReg$(_c, \"ParticlesComponent\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","Particles","initParticlesEngine","loadSlim","jsxDEV","_jsxDEV","ParticlesComponent","props","_s","init","setInit","console","log","engine","then","particlesLoaded","container","options","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","modes","repulse","distance","push","quantity","particles","links","opacity","width","move","direction","outModes","default","random","speed","straight","number","density","value_area","shape","type","size","min","max","detectRetina","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/PulseZest/Console/PulseZest-Console/src/components/particles.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\r\nimport { loadSlim } from \"@tsparticles/slim\";\r\n\r\nconst ParticlesComponent = (props) => {\r\n  const [init, setInit] = useState(false);\r\n\r\n  console.log(init);\r\n  useEffect(() => {\r\n    initParticlesEngine(async (engine) => {\r\n      await loadSlim(engine);\r\n    }).then(() => {\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const particlesLoaded = (container) => {\r\n    console.log(container);\r\n  };\r\n\r\n  const options = useMemo(\r\n    () => ({\r\n      background: {\r\n        color: {\r\n          value: \"#0f0c29\", // Change background color to a gradient\r\n        },\r\n      },\r\n      fpsLimit: 60,\r\n      interactivity: {\r\n        events: {\r\n          onClick: {\r\n            enable: true,\r\n            mode: \"push\",\r\n          },\r\n          onHover: {\r\n            enable: true,\r\n            mode: \"repulse\",\r\n          },\r\n        },\r\n        modes: {\r\n          repulse: {\r\n            distance: 100, // Increase repulse distance\r\n          },\r\n          push: {\r\n            quantity: 4, // Increase the number of particles pushed on click\r\n          },\r\n        },\r\n      },\r\n      particles: {\r\n        color: {\r\n          value: [\"#ffffff\", \"#ff73a1\", \"#ffd700\"], // Change particle colors to an array of multiple colors\r\n        },\r\n        links: {\r\n          color: \"#ffffff\",\r\n          distance: 150,\r\n          enable: true,\r\n          opacity: 0.3,\r\n          width: 1,\r\n        },\r\n        move: {\r\n          direction: \"random\",\r\n          enable: true,\r\n          outModes: {\r\n            default: \"out\", // Change out mode to \"out\" to make particles disappear smoothly\r\n          },\r\n          random: true,\r\n          speed: 1,\r\n          straight: false,\r\n        },\r\n        number: {\r\n          density: {\r\n            enable: true,\r\n            value_area: 800, // Increase the density value area\r\n          },\r\n          value: 100,\r\n        },\r\n        opacity: {\r\n          value: 0.8, // Reduce overall opacity slightly\r\n        },\r\n        shape: {\r\n          type: \"circle\",\r\n        },\r\n        size: {\r\n          value: { min: 1, max: 3 },\r\n        },\r\n      },\r\n      detectRetina: true,\r\n    }),\r\n    []\r\n  );\r\n\r\n  return <Particles id={props.id} init={particlesLoaded} options={options} />;\r\n};\r\n\r\nexport default ParticlesComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}